<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="m_treeViewImageList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="m_treeViewImageList.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADi
        BQAAAk1TRnQBSQFMAwEBAAEoAQABKAEAARABAAEQAQAE/wEZAQAI/wFCAU0BNgcAATYDAAEoAwABQAMA
        ARADAAEBAQABGAYAAQwSAAn3AZUBewFoAWQBSgE2AWQBSgE2AWQBSgE2AWQBSgE2AWQBSgE2AWQBSgE2
        AWQBSgE2AWQBSgE2DPeQAAn3AZkBfwFsAdgB6QHsAcMB1QHYAcEB0wHWAb8B0QHUAbsBzQHQAbgByQHN
        AbgByQHNAWQBSgE2DPeQAAn3AaABhQF0AdgB6QHsAbkBnQF/AbkBnQF/AbkBnQF/AdgB6QHsAbkBnQF/
        AbgByQHNAWQBSgE2DPeQAAFkAUoBNgFkAUoBNgFkAUoBNgGnAY0BfQHYAekB7AG5AZ0BfwP/AbkBnQF/
        AdgB6QHsAdgB6QHsAbgByQHNAWQBSgE2AWQBSgE2AWQBSgE2AWQBSgE2AdwB1wHTkAABjQF3AWQBjAHN
        Ad4BggHAAdIBsQGWAYcB2AHpAewBuQGdAX8BuQGdAX8BuQGdAX8B2AHpAewBuQGdAX8BuAHJAc0BZAFK
        ATYB8QHTAcQB8QHRAcEB8AHPAb4BZAFKATaQAAGTAXwBawGlAewB9gGTAdYB5AG6AaEBkwHYAekB7AHY
        AekB7AHYAekB7AHYAekB7AHYAekB7AHYAekB7AHYAekB7AFkAUoBNgHFAWoBPgHPAYQBYAHxAdEBwgFk
        AUoBNpAAAZkBggFyAXsBqwG9AT4BegE0AdABbgE8AcwBYwEuAcEBWQElAbIBUQEgAZ8BSAEdAY0BQQEb
        AX8BOwEZAXkBNwEZAXkBNwEZAeYBgQFPAcIBagFAAfIB1AHHAWQBSgE2kAABngGIAXgBTgGOAUcBjQHL
        AY4BzwGBAVwB0AF3AUkBzwFqATcByQFgASoBvQFXASMBrQFPAR8BmQFFARwBhwE+ARoBewE4ARkB8gGJ
        AVYByQFvAUMB9AHYAcsBZAFKATaQAAGkAY4BfwG2AdMBoQFWAY4BQwFiAbgBaAEuAXoBHQGWAakBgAH1
        AdwB0AFLAasBzgFkAUoBNgH/AaMBcgH/AZwBagH/AZYBYgH6AZABXAHRAXQBRgH0AdsB0AFkAUoBNpAA
        AaoBlAGEAf0B+QH3AbYBxgGeAWYBtwJvAZ4BUgH3AeYB3gEvAaUB1wGZAe4B+QF3AYMBegH/AaoBfAH/
        AaQBcwH/AZ0BawH/AZcBZAHZAXgBSAH2Ad8B1QFkAUoBNpAAAa4BmgGKAf4B/QH7Af0B+QH3AYABngFv
        AbgBwwGlAfkB7AHmAfgB5gHeAUsBqwHOAWQBSgE2Af8BsAGFAf8BqwF9Af8BpQF1Af8BngFsAd4BfAFL
        AfYB4wHZAWQBSgE2kAABtAGfAZEBsQGdAY0BrwGZAYoBrAGXAYgBqgGUAYUBpwGQAYEBpAGNAX4BogGL
        AXsBngGIAXgB/wG2AY8B/wGxAYYB/wGrAX4B/wGlAXYB5AF/AU4B9wHmAd4BZAFKATaQAAP3AckBswGk
        BP8BtAGNAf8BwgGiAf8BwgGiAf8BwgGiAf8BwgGiAf8BvwGeAf8BuwGYAf8BtwGQAf8BsQGHAf8BrAGA
        AecBggFQAfgB6QHiAWQBSgE2kAAD9wHJAbMBpAP/AewBwwGtAf8BuAGTAf8BtQGOAf8BsQGHAf8BrAF/
        Af8BpQF2Af8BnwFtAf8BmQFlAf0BkgFeAfQBiwFXAdsBlgFxAfoB7QHnAWQBSgE2kAAD9wHJAbMBpA7/
        Av4B/QH8Af4B/AH6Af0B+gH4Af4B+AH2AfwB9gH0AfwB9QHxAfsB8gHuAfsB8AHrAWQBSgE2kAAD9wHp
        AeYB5AHLAbUBpgHKAbQBpQHJAbMBpAHIAbIBowHHAbEBogHFAbABoQHEAa4BnwHDAa0BngHBAawBnQHA
        AaoBmwG+AakBmgG9AagBmQG8AacBmAHcAdcB05AAAUIBTQE+BwABPgMAASgDAAFAAwABEAMAAQEBAAEB
        BQABgBcAA/+BAAs=
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAAAGABoAwAAFgAAACgAAAAQAAAAIAAAAAEAGAAAAAAAAAMAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC3o5JkSDdiSTVk
        STViSjRkSTViSDdkSjJiSDdgSDQAAAAAAAAAAAAAAAAAAAAAAAC3opP+8/Xf3dXg2NHe0cnfzsHcyL3c
        xLLGrKVlSTgAAAAAAAAAAAAAAAAAAAAAAAC5opL89/T/8/H48u357ef56eL35NxTe5RLWGhDUF5BS1w8
        R1U6Q1E3P1A1PkwAAAC6qpr///5kSTT9+PdkSTT48e5kSDdbhpvD+cSY36ZvxoJCrls4fkF+c103QE0A
        AADDrp///f/8/v//+/r7+PT99PD58O1ijqVBsFy77MaL1p43fUCmmpB2YFU7QlUAAADHsqP///xhSDT/
        /v1hSTX89/ZkSTRtmKv44d9Brl87fUK4nYiuinLYrYw/SFUAAADNtqf6//3//v8AAAD7/vz/+/j8+Pdt
        nrT08Ov3497w1M3SyNl0hsXpxbVETmAAAADayr7TwbrNurLIs6vEr6DCqJy9pJR5prv79fb48On56uFy
        luRAlup2iMdFVWIAAAAAAAAAAADCrp3W6e7V6uja6O7V6e57rb8AAAD5+PT99fbK1fV5n+fc1N5NXWkA
        AAAAAAAAAADJsqPX6erZ6u3a6ezV6OuBscN9rMF1p7tyn7Rol6xhjKdag5xUfJUAAAAAAAAAAADNtana
        6ezY6O7Z6u3Y6ezW6ezY6uvW6+nW6e5mSDUAAAAAAAAAAAAAAAAAAAAAAAD9wqL/vJf/sov9qXn/n2r8
        klzth1PYeUjJbD+wYTgAAAAAAAAAAAAAAAAAAAAAAAD+vpv/wqL9wJ79vZv8u5X6tI/8sIz6q4LylWTN
        ZDEAAAAAAAAAAAAAAAAAAAAAAAD/vpv+uZL+sYP+qXf/nmr/l2T0j1jqhFDdekjOcUQAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//wAAAD8AAAA/
        AAAAAQAAAAEAAAABAAAAAQAAEAEAAAABAADAgQAAwAEAAMAPAADADwAAwA8AAMAPAAD//wAA
</value>
  </data>
</root>